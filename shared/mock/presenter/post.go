// Code generated by MockGen. DO NOT EDIT.
// Source: usecase/posts/presenter/post.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/ilmimris/learn-unittest/domain/model"
	service "github.com/ilmimris/learn-unittest/domain/service"
)

// MockPostPresenter is a mock of PostPresenter interface.
type MockPostPresenter struct {
	ctrl     *gomock.Controller
	recorder *MockPostPresenterMockRecorder
}

// MockPostPresenterMockRecorder is the mock recorder for MockPostPresenter.
type MockPostPresenterMockRecorder struct {
	mock *MockPostPresenter
}

// NewMockPostPresenter creates a new mock instance.
func NewMockPostPresenter(ctrl *gomock.Controller) *MockPostPresenter {
	mock := &MockPostPresenter{ctrl: ctrl}
	mock.recorder = &MockPostPresenterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPostPresenter) EXPECT() *MockPostPresenterMockRecorder {
	return m.recorder
}

// ResponsePost mocks base method.
func (m *MockPostPresenter) ResponsePost(ctx context.Context, post *model.Post) (*service.Post, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ResponsePost", ctx, post)
	ret0, _ := ret[0].(*service.Post)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ResponsePost indicates an expected call of ResponsePost.
func (mr *MockPostPresenterMockRecorder) ResponsePost(ctx, post interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResponsePost", reflect.TypeOf((*MockPostPresenter)(nil).ResponsePost), ctx, post)
}

// ResponsePosts mocks base method.
func (m *MockPostPresenter) ResponsePosts(ctx context.Context, posts []*model.Post) ([]*service.Post, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ResponsePosts", ctx, posts)
	ret0, _ := ret[0].([]*service.Post)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ResponsePosts indicates an expected call of ResponsePosts.
func (mr *MockPostPresenterMockRecorder) ResponsePosts(ctx, posts interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResponsePosts", reflect.TypeOf((*MockPostPresenter)(nil).ResponsePosts), ctx, posts)
}
